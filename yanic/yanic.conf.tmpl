# Send respondd request to update information
[respondd]
enable           = true
# Delay startup until a multiple of the period since zero time
synchronize      = "1m"
# how oftern request per multicast
collect_interval = "1m"
# on which interface
interface        = "{{iface}}"
# define a port to listen
# (no or 0 would choose at port at his own)
#port = 10001


# A little build-in webserver, which statically serves a directory.
# This is useful for testing purposes or for a little standalone installation.
[webserver]
enable  = {{webserver}}
bind    = "[{{bind_ip}}]:8080"
webroot = "/srv/yanic/data"


[nodes]
enable         = true
# state-version of nodes.json to store cached data,
#  these is the directly collected respondd data
state_path     = "/srv/yanic/{{site}}.state"

# Export nodes and graph periodically
save_interval = "1m"

# Set node to offline if not seen within this period
offline_after = "10m"

# Prune offline nodes after a time of inactivity
prune_after = "30d"

[meshviewer]
# structur of nodes.json, which to support
# version 1 is to support legacy meshviewer (which are in master branch)
#    i.e. https://github.com/ffnord/meshviewer/tree/master
# version 2 is to support new version of meshviewer (which are in legacy develop branch or newer)
#    i.e. https://github.com/ffnord/meshviewer/tree/dev
#         https://github.com/ffrgb/meshviewer/tree/develop
version  = 2
# path where to store nodes.json
nodes_path     = "/srv/yanic/data/{{site}}/nodes.json"
# path where to store graph.json
graph_path     = "/srv/yanic/data/{{site}}/graph.json"

[database]
# cleaning data of measurement node,
#   which are older than 7d
delete_after = "30d"
#   how often run the cleaning
delete_interval = "1d"

# Save collected data to InfluxDB
# there would be the following measurments:
#  node: store node spezific data i.e. clients memory, airtime
#  global: store global data, i.e. count of clients and nodes
#  firmware: store count of nodes tagged with firmware
#  model: store count of nodes tagged with hardware model
[[database.connection.influxdb]]
enable   = true
address  = "{{influxdb.address}}"
database = "{{influxdb.database}}"
username = "{{influxdb.username}}"
password = "{{influxdb.password}}"
# tagging of the data are optional
# be carefull tags by system would overright config
[database.connection.influxdb.tags]
job = "{{site}}"

[[database.connection.logging]]
enable   = false
path     = "/var/log/yanic.log"

[[database.connection.graphite]]
enable   = false
address  = "localhost:2003"
prefix   = "freifunk"
