#
# FFHO Check Commands for network related stuff (Salt Managed)
#

#
# ifupdown2
object CheckCommand "ifupdown2" {
        import "plugin-check-command"

	command = [ "/usr/bin/sudo", FFHOPluginDir + "/check_ifupdown2" ]

	arguments = {
		"--ok_string" = "$ok_string$"
	}
}


#
# Conntrack table size
object CheckCommand "conntrack_size" {
	import "plugin-check-command"

	command = [ "/usr/bin/sudo", FFHOPluginDir + "/check_conntrack_size" ]
}


#
# bird OSPF + BGP
object CheckCommand "bird_ospf" {
	import "plugin-check-command"

	command = [ "/usr/bin/sudo", FFHOPluginDir + "/check_bird_ospf" ]

	arguments = {
		"--proto" = "$proto$"
		"--protocol" = "$protocol$"
		"--interfaces_down_ok" = "$interfaces_down_ok$"
		"--interfaces_down_ok_file" = "$interfaces_down_ok_file$"
		"--ignore_missing_file" = {
			set_if = "$ignore_missing_file$"
		}
		"--no_ptp_ip" = {
			set_if = "$no_ptp_ip$"
		}
	}

	vars.proto = "4"			# IP protocol version to check
	vars.protocol = ""			# Bird OSPF protocol instance name to check
	vars.interfaces_down_ok = ""		# List of interfaces which are OK to have no session. (Space separated list)
	vars.interfaces_down_ok_file = ""	# List of interfaces which are OK to have no session. (One per line)
	vars.ignore_missing_file = false	# Ignore a possible non-existent file given as --interfaces_down_ok_file
	vars.no_ptp_ip = false			# Do not show neighbor IDs for ptp interfaces
}

object CheckCommand "bird_bgp" {
	import "plugin-check-command"

	command = [ "/usr/bin/sudo", FFHOPluginDir + "/check_bird_bgp" ]

	arguments = {
		"--proto" = "$proto$"           # IP protocol version to check
		"--asn" = "$asn$"               # Local AS number
		"--ibgp" = {                    # Check iBGP sessions
			set_if = "$ibgp$"
		}
		"--ibgp_warn" = "$ibgp_warn$"   # Warning interval for down iBGP sessions
		"--ibgp_crit" = "$ibgp_crit$"   # Critical interval for down iBGP sessions
		"--ebgp" = {                    # Check eBGP sessions
			set_if = "$ebgp$"
		}
		"--ebgp_warn" = "$ebgp_warn$"   # Warning interval for down eBGP sessions
		"--ebgp_crit" = "$ebgp_crit$"   # Critical interval for down eBGP sessions
		"--disabled_ok" = {             # Treat sessions disabled in bird as OK.
			set_if = "$disabled_ok$"
		}
		"--sessions_down_ok" = "$sessions_down_ok$"
		                                # List of sessions which are OK to be down. (Space separated list)
		"--sessions_down_ok_file" = "$sessions_down_ok_file$"
		                                # List of sessions which are OK to be down. (One per line)
		"--ignore_missing_file" = {     # Ignore a possible non-existent file given as --sessions_down_ok_file
			set_if = "$ignore_missing_file$"
		}
		"--session" = "$session$"       # Only check for session with given name
		"--routes_imported_warn" = "$routes_imported_warn$"     # Warning interval for imported routes
		"--routes_imported_crit" = "$routes_imported_crit$"     # Critical interval for imported routes
		"--routes_exported_warn" = "$routes_exported_warn$"     # Warning interval for exported routes
		"--routes_exported_crit" = "$routes_exported_crit$"     # Critical interval for exported routes
		"--routes_preferred_warn" = "$routes_preferred_warn$"   # Warning interval for preferred routes
		"--routes_preferred_crit" = "$routes_preferred_crit$"   # Critical interval for preferred routes
	}

	vars.proto = "4"
	vars.ibgp_warn = "1:1"
	vars.ibgp_crit = "2:"
	vars.ebgp_warn = "1:1"
	vars.ebgp_crit = "2:"
}
